######################################################
# configuration file for backup.sh by Daniel Malament
######################################################


###############
# housekeeping
###############

# search path for executables
# see script usage note on portability
# typical safe value:
#   usepath="/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin"
# can be blank, for the default
usepath="/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin"

# in order to have a non-0 runevery or ifrunning (see below), your system
# must support one of:
# "find": find . -mmin +N
# "date-r": date -r fileref +%s
# "date-d": date -d "N minutes ago" "+%Y%m%d%H%M.%S"
# "awk"/"gawk": awk/gawk with strftime() and systime()
# the last two also require touch -t timestamp and find . -newer fileref,
# but those should usually be the case
timechecktype="find"

# umask value
# generally 077 (more secure, but less accessible)
# or 022 (more accessible, but less secure; not necessarily a good idea)
# can be blank, for the default (but 077 is strongly recommended)
useumask="077"

# debug the script ("yes" or "no")?
# currently, turns on shell tracing (set -x)
debugme="no"


#####################
# checks and logging
#####################

# how often to actually run a backup, in minutes;
# if this amount of time has passed since the last backup started
# (see startedfile, below), the script will continue
# OR: if runevery="0", no check will be performed, and a backup
# will be attemped every time the script is run
runevery="720"  # 12 hours

# path to the backup-started timestamp file
# (updated when a backup actually starts)
startedfile="backup.started"

# if the script has passed the runevery check, but the previous backup
# is still running or was interrupted (i.e. the lockfile is still present):
# * it will send an alert to the mailto address(es)
# * if this continues to be the case, it will send further alerts every
#     ifrunning minutes (unless ifrunning="0", or the alerts are silenced
#     (see script usage note on parameters, or run
#     "backup.sh - usage"))
# * either way, it will send an alert when it next successfully starts,
#     so you know that e.g. the previous backup finally finished, and
#     the next one has begun
ifrunning="120"  # 2 hours

# path to the lock file (actually a directory for technical reasons,
# and since we have it, we can put temp files in it...)
lockfile="backup.lock"

# suppress email ("yes" or "no")?
# see script usage note on output
suppressemail="no"

# where to send alerts and errors (one or more email addresses,
# separated by spaces)
mailto="danielm@bluetiger.net"

# subject line of alert/error emails
# if blank, "backup alert on HOSTNAME" will be used,
# where HOSTNAME is the name of the local host
subject="backup alert on `hostname`"

# path to the alert-timestamp file (used to track ifrunning)
alertfile="backup.alert"

# path to the current backup log (blank for none);
# this gets a copy of the output of rsync, plus a few timestamps and
# diagnostics
# note: if this is in a directory with a large number of files,
# log rotation may be slow
# also, the directory should never contain files that match
# backuplog.NUMBER or backuplog.NUMBER.* except log files from the script;
# on the other hand, backup logs may be gzipped (or bzipped, etc.)
# in place without disrupting the script
backuplog="backup.log"

# number of logs to keep, including the current one (0=unlimited)
# note that both numlogs and dayslogs will be applied if non-0
numlogs="5"

# days worth of logs to keep, including the current one (0=unlimited)
# (that is, remove logs older than this many days, first rounding _down_
#  to the nearest day)
# note that both numlogs and dayslogs will be applied if non-0
dayslogs="0"

# use syslog ("all", "yes" or "no")?
# "all" includes the actual ssh/rsync commands that are run
# see script usage note on output
usesyslog="yes"

# syslog priority to use for status messages
# "daemon.info" is recommended, but can be blank for the default
syslogstat="daemon.info"

# syslog priority to use for alerts/errors
# "daemon.err" is recommended, but can be blank for the default
syslogerr="daemon.err"

# syslog tag to use for status and alert/error messages
syslogtag="backup"

# print to stdout/stderr ("yes" or "no")?
# see script usage note on output
quiet="no"

# path to the status log (blank for none); gets a copy of all intentional
# script output except what goes in the backup log
# see script usage note on output
statuslog="backup.status"


###############
# ssh settings
###############

# login: "user@remotehost"
sshlogin="zephyr@aeolus"

# path to the ssh key
# note: for security, use a separate key and prepend something like:
# from="LOCALIP",no-agent-forwarding,no-x11-forwarding,no-pty,permitopen="localhost:873",command="/usr/sbin/nologin"
# (with LOCALIP replaced by the local machine's IP), followed by a space,
# to the line in the authorized_keys file on the remote server
# can be left blank for the default
sshkey=
#sshkey="/home/Daniel/.ssh/rsync-rsa"

# ssh port on the remote server (usually 22)
# if blank, defaults to 22
sshport="22"

# local end of the tunnel (port number, can be any valid unused port)
# if blank, defaults to 8873
localport="8873"

# remote end of the tunnel (port number, usually 873)
# if blank, defaults to 873
remoteport="873"

# how long to wait for the ssh tunnel to be established, in seconds
sshtimeout="15"


#################
# rsync settings
#################

# mode of operation ("tunnel", "direct", "nodaemon", or "local")
# see script usage note on backup modes
rsyncmode="tunnel"

# source files and/or directories, separated by spaces
# if any filenames contain spaces, those filenames must be
# enclosed in \"
# note that directories ending with / will have their _contents_ transferred,
# while directories not ending with / will be transferred themselves
# see also script usage note on backup modes
source="\"/c/Documents and Settings/Daniel\" /d/ /e/"

# destination; see script usage note on backup modes
dest="Daniel@localhost::zephyr"

# remote rsyncd port; see script usage note on backup modes
# if blank, defaults to 873
rsyncdport="873"

# path to the password file (for the remote rsync user)
passwordfile="backup.pw"

# path to the optional filter-rules file (blank = no file; file can also
# be empty)
# note that the lockfile should not be transferred if it is in the source
# directories; specifically, it should be hidden (meaning not copied, and
# deleted from the remote server if present)
filterfile="backup.filter"

# additional options to rsync
# can be blank; typically "-va --sparse --numeric-ids --delete"
# any options containing spaces must be enclosed in \"
# note that -H (to preserve hard links) takes a lot of memory
rsyncoptions="-va --sparse --numeric-ids --delete"

# yet more options to rsync
# mostly useful to pass options from the command line while leaving the ones
# in the config file alone
rsyncadd=""
